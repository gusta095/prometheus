apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: monitoramento-prometheus
  namespace: prometheus
  labels: &Labels
    k8s-app: prometheus
    app.kubernetes.io/name: monitoramento
    app.kubernetes.io/component: prometheus
spec:
  replicas: 1
  template:
    metadata:
      labels:
        k8s-app: prometheus
    spec:
      serviceAccountName: "prometheus"
      initContainers:
        - name: "init-chown-data"
          image: debian:9
          imagePullPolicy: Always
          command: ["chown", "-R", "65534:65534", "/data"]
          volumeMounts:
            - name: monitoramento-prometheus-data
              mountPath: /data
              subPath: ""
      containers:
      - env:
        - name: TZ
          value: America/Sao_Paulo
        image: quay.io/prometheus/prometheus:v2.19.1
        imagePullPolicy: IfNotPresent
        name: prometheus-server
        args:
          - --config.file=/etc/config/prometheus.yaml
          - --storage.tsdb.path=/data
          - --web.console.libraries=/etc/prometheus/console_libraries
          - --web.console.templates=/etc/prometheus/consoles
          - --web.enable-lifecycle
        ports:
          - containerPort: 9090
            name: prometheus-port
            protocol: TCP
        securityContext:
          capabilities: {}
          privileged: true
        readinessProbe:
          httpGet:
            path: /-/ready
            port: 9090
          initialDelaySeconds: 30
          timeoutSeconds: 30
        livenessProbe:
          httpGet:
            path: /-/healthy
            port: 9090
          initialDelaySeconds: 30
          timeoutSeconds: 30
        # resources:
        #   limits:
        #     cpu: 500m
        #     memory: 400MI
        #   requests:
        #     cpu: 500m
        #     memory: 400MI
        volumeMounts:
          - name: config-volume
            mountPath: /etc/config
          - name: monitoramento-prometheus-data
            mountPath: /data
            subPath: ""
      dnsPolicy: ClusterFirst
      # nodeSelector:
      #   node_profile: nodes-spot-v1
      restartPolicy: Always
      schedulerName: default-scheduler
      terminationGracePeriodSeconds: 300
      volumes:
        - name: config-volume
          configMap:
            name: monitoramento-prometheus-config
        - name: monitoramento-prometheus-data
        # labels: *Labels
          persistentVolumeClaim:
            claimName: prometheus-pvc-v1
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            - labelSelector:
                matchExpressions:
                  - key: k8s-app
                    operator: In
                    values:
                      - prometheus
              topologyKey: "kubernetes.io/hostname"
# ---
# kind: PersistentVolumeClaim
# apiVersion: v1
# metadata:
#   namespace: prometheus
#   name: prometheus-pvc-v1
# spec:
#   storageClassName: prometheus-db-class-v1
#   accessModes:
#     - ReadWriteOnce
#   resources:
#     requests:
#       storage: 20Gi
# ---
# kind: StorageClass
# apiVersion: storage.k8s.io/v1
# metadata:
#   namespace: prometheus
#   name: prometheus-db-class-v1
# provisioner: kubernetes.io/gce-pd
# reclaimPolicy: Retain
# parameters:
#   type: pd-standard
#   replication-type: none
